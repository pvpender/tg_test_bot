import logging
from aiogram import Bot, Dispatcher, executor, types
from aiogram.utils.helper import Helper, HelperMode, ListItem
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.contrib.middlewares.logging import LoggingMiddleware
import random
import time
import os
import sqlite3 as sq
API_TOKEN = '1133381423:AAEytfr8xb5xoB9iewgDWPAwKZlMgkArW_w'

# Configure logging
logging.basicConfig(level=logging.INFO)


class TS(Helper):
    mode = HelperMode.snake_case
    T_S1 = ListItem()
    T_S2 = ListItem()
    T_S3 = ListItem()


# Initialize bot and dispatcher
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot, storage=MemoryStorage())
dp.middleware.setup(LoggingMiddleware())

a = 0
ct = ' pip'
usid = 0
wlis = ['859850095', '898287979']

con = sq.connect(':memory:')
c = con.cursor()
c.execute("CREATE TABLE em(id integer, pol integer)")
con.commit()

@dp.message_handler(commands=['dik'])
async def echo(message: types.Message):
    if str(message.from_user.id) in wlis:
        a = random.randint(1, 1000)
        id = '@' + str(message.from_user.username)
        text = "–£–≥–æ,  " + id + " ! –¢–≤–æ–π –ø–∏—Å–∫–∞ —Ü–µ–ª—ã—Ö " + str(a) + " —Å–≤–µ—Ç–æ–≤—ã—Ö –ª–µ—Ç!"
        await message.answer(text)
    else:
        a = random.randint(-200, 40)
        if (a == 0):
            text = "–ù–µ –º–∞ –ø–∏—Å–∫–∞"
            id = '@' + str(message.from_user.username)
            text = id + ' ' + text
            await message.answer(text)

        if (a < 0):
            text = "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞ –ø–∏—Å–∫–∞, –≤—Å–µ–≥–æ " + str(a) + " –º–º!"
            id = '@' + str(message.from_user.username)
            text = id + ' ' + text
            await message.answer(text)

        if (a > 0):
            text = "–¢–≤–æ–π –ø–∏—Å–∫–∞ " + str(a) + " –º–º!"
            id = '@' + str(message.from_user.username)
            text = id + ' ' + text
            await message.answer(text)


@dp.message_handler(commands=['an_dik'])
async def check(message: types.message):
    try:
        if str(message.reply_to_message.from_user.id) in wlis:
            a = random.randint(1, 1000)
            id = '@' + str(message.reply_to_message.from_user.username)
            text = "–£–≥–æ! –£ " + id + " –ø–∏—Å–∫–∞ —Ü–µ–ª—ã—Ö " + str(a) + " —Å–≤–µ—Ç–æ–≤—ã—Ö –ª–µ—Ç!"
            await message.answer(text)
        else:
            a = random.randint(-200, 40)
            if (a < 0):
                id = '@' + str(message.reply_to_message.from_user.username)
                text = "–£ " + id + " –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞ –ø–∏—Å–∫–∞, –≤—Å–µ–≥–æ " + str(a) + " –º–º!"
                await message.answer(text)
            if (a == 0):
                id = '@' + str(message.reply_to_message.from_user.username)
                text = "–£ " + id + " –Ω–µ –º–∞ –ø–∏—Å–∫–∞"
                await message.answer(text)
            if (a > 0):
                id = '@' + str(message.reply_to_message.from_user.username)
                text = "–£ " + id + " –ø–∏—Å–∫–∞ " + str(a) + " –º–º!"
                await message.answer(text)
    except:
        await message.answer('–ö–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ —è–≤–ª—è—Ç—å—Å—è –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ!')


@dp.message_handler(commands=['per_dik'])
async def check(message: types.message):
    try:
        if str(message.reply_to_message.forward_from.id) in wlis:
            id = '@' + str(message.reply_to_message.forward_from.username)
            a = random.randint(1, 1000)
            text = "–£–≥–æ! –£ " + id + " –ø–∏—Å–∫–∞ —Ü–µ–ª—ã—Ö " + str(a) + " —Å–≤–µ—Ç–æ–≤—ã—Ö –ª–µ—Ç!"
            await message.answer(text)
        else:
            a = random.randint(-200, 40)
            if (a < 0):
                id = '@' + str(message.reply_to_message.forward_from.username)
                text = "–£ " + id + " –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞ –ø–∏—Å–∫–∞, –≤—Å–µ–≥–æ " + str(a) + " –º–º!"
                await message.answer(text)
            if (a == 0):
                id = '@' + str(message.reply_to_message.forward_from.username)
                text = "–£ " + id + " –Ω–µ –º–∞ –ø–∏—Å–∫–∞"
                await message.answer(text)
            if (a > 0):
                id = '@' + str(message.reply_to_message.forward_from.username)
                text = "–£ " + id + " –ø–∏—Å–∫–∞ " + str(a) + " –º–º!"
                await message.answer(text)
    except:
        await message.answer(
            '–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å username —á–µ–ª–æ–≤–µ–∫–∞, –µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—å  –∑–∞–∫—Ä—ã—Ç –∏–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ')


@dp.message_handler(commands=['whois'])
async def whois(msg: types.message):
    try:
        if msg.reply_to_message.forward_from:
            fwd = msg.reply_to_message.forward_from.id
            await msg.answer(str(fwd))
        elif msg.reply_to_message.from_user:
            fwd = msg.reply_to_message.from_user.id
            await msg.answer(str(fwd))
    except:
        fwd = msg.from_user.id
        await msg.answer(str(fwd))


@dp.message_handler(commands=['print'])
async def pr(msg: types.message):
    global ct
    await msg.answer_photo(
        'https://raw.githubusercontent.com/pvpender/tg_test_bot/master/21-11-37-1569325738_mi-mix-alpha.jpeg')


@dp.message_handler(state='*', commands=['izm'])
async def izm(msg: types.message):
    state = dp.current_state(user=msg.from_user.id)
    await state.set_state(TS.all()[1])
    await msg.answer('heh')


@dp.message_handler(state=TS.T_S2)
async def izmen(msg: types.message):
    state = dp.current_state(user=msg.from_user.id)
    global ct
    ct = msg.text
    await state.reset_state()
    await msg.answer('gotov')


@dp.message_handler(lambda m: m.chat.type == 'private', state='*', commands=['sviz'])
async def otp(msg: types.message):
    state = dp.current_state(user=msg.from_user.id)
    await state.set_state(TS.all()[0])
    await msg.answer(
        '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—Ç–µ –≤–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –û–î–ù–ò–ú —Å–æ–æ–±—â–µ–Ω–∏–µ–º. –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è - –≤–∞–º –ø—Ä–∏–¥—ë—Ç –æ–± —ç—Ç–æ–º —Å–æ–æ–±—â–µ–Ω–∏–µ. –ï—Å–ª–∏ –Ω–µ—Ç - –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑. –í–ù–ò–ú–ê–ù–ò–ï: –∫–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤ –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–∞—Ö, –ø–∏—à–∏—Ç–µ –±–æ—Ç—É –≤ –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!')

@dp.message_handler(lambda m: m.chat.type != 'private', state='*', commands=['sviz'])
async def mistake(msg: types.message):
    await msg.answer('–ö–æ–º–∞–Ω–¥—É /sviz –Ω—É–∂–Ω–æ –ø–∏—Å–∞—Ç—å –±–æ—Ç—É –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è!')

@dp.message_handler(state=TS.T_S1)
async def otpravka(msg: types.message):
    state = dp.current_state(user=msg.from_user.id)
    c.execute("INSERT INTO em(id, pol) VALUES(?,?)",(msg.message_id, msg.from_user.id))
    print(msg.message_id)
    print(msg.from_user.id)
    await msg.forward(898287979)
    await state.reset_state()
    await msg.answer('–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ! –ö–æ–º–∞–Ω–¥–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Ä–∞—Å—Å–º–æ—Ç—Ä–∏—Ç –µ–≥–æ!')

@dp.message_handler(commands=['otv'])
async def ot(msg: types.message):
    state = dp.current_state(user= msg.from_user.id)
    global usid
    usid = msg.reply_to_message.message_id
    await state.set_state(TS.all()[2])
    await msg.answer('–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')

    @dp.message_handler(state=TS.T_S3)
    async def to(msg):

        c.execute("SELECT pol FROM em WHERE id =?",(usid-1,))
        row = c.fetchone()
        print(usid)
        print(row)
        r = row[0]
        await bot.send_message(r,msg.text)
        await state.reset_state()
        await msg.answer('gotovo')




@dp.message_handler(commands= ['dikruletka'])
async def rul(message: types.message):
 a = random.randint(1,1000)
 if (a>2) & (a<12):
  await message.answer('–ú–º... –í—ã  –≤—ã–±–∏–ª–∏ –æ–±—ã—á–Ω—É—é –ø–∏—Å—å–∫—É ü•î"–ú–∏—Å—Ç–µ—Ä –∫–∞—Ä—Ç–æ—à–∫–∞"ü•î')
 elif a == 1:
  await message.answer('–û–≥–æ! –í—ã –≤—ã–±–∏–ª–∏ –ª–µ–≥–µ–Ω–¥–∞—Ä–Ω—É—é –ø–∏—Å—å–∫—É üíÄ"–•*—ë–≤–∞—è —Å–º–µ—Ä—Ç—å"üíÄ')
 elif (a>13) & (a<23):
  await message.answer('–ú–º... –í—ã –≤—ã–±–∏–ª–∏ –æ–±—ã—á–Ω—É—é –ø–∏—Å—å–∫—É üò∑"–ö–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å"üò∑')
 elif (a>24) & (a<34):
  await message.answer('–ú–º... –í—ã –≤—ã–±–∏–ª–∏ –æ–±—ã—á–Ω—É—é –ø–∏—Å—å–∫—É üêß"–î—É—Ä–∫–∞ –ü–∏–Ω–≥–≤–∏–Ω–∞"üêß')
 elif (a>35) & (a<45):
  await message.answer('–ú–º... –í—ã –≤—ã–±–∏–ª–∏ –æ–±—ã—á–Ω—É—é –ø–∏—Å—å–∫—É ü§¨"–ì–æ–ø–Ω–∏–∫"ü§¨')
 elif (a>46) & (a<56):
  await message.answer('–ú–º... –í—ã –≤—ã–±–∏–ª–∏ –æ–±—ã—á–Ω—É—é –ø–∏—Å—å–∫—É –ø–∏—Å—å–∫—É üïµüèº‚Äç‚ôÇ"–ö–∞—Ç—Ç–∞–Ω–∏"üïµüèº‚Äç‚ôÇ')
 elif (a>57) & (a<67):
  await message.answer('–ú–º... –í—ã –≤—ã–±–∏–ª–∏ –æ–±—ã—á–Ω—É—é –ø–∏—Å—å–∫—É üêù"–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–π —É–ª–µ–π"üêù')
 elif (a>68) & (a<69):
  await message.answer('–û–≥–æ! –í—ã –≤—ã–±–∏–ª–∏ –ª–µ–≥–µ–Ω–¥–∞—Ä–Ω—É—é –ø–∏—Å—å–∫—É üê≤"–ó–æ–ª–æ—Ç–æ–π –¥—Ä–∞–∫–æ–Ω"üê≤')
 elif (a>70) & (a<76):
  await message.answer('–û! –í—ã –≤—ã–±–∏–ª–∏ —ç–ø–∏—á. –ø–∏—Å—å–∫—É ü¶Ö"–•–∞–±–∏–±"ü¶Ö')
 elif (a>77) & (a<83):
  await message.answer('–û! –í—ã –≤—ã–±–∏–ª–∏ —ç–ø–∏—á. –ø–∏—Å—å–∫—É üé≤"–ê–∑–∞—Ä—Ç"üé≤')
 elif (a>84) & (a<89):
  await message.answer('–£—Ö! –í—ã –≤—ã–±–∏–ª–∏ –º–∏—Ñ–∏—á. –ø–∏—Å—å–∫—É üëë"–ö–æ—Ä–æ–ª—å"üëë')
 elif (a>90) & (a<91):
  await message.answer('–û–≥–æ! –í—ã –≤—ã–±–∏–ª–∏ –ª–µ–≥–µ–Ω–¥–∞—Ä–Ω—É—é –ø–∏—Å—å–∫—É üåà"–û–±–¥–∞–≤–±–∞–≤—Å—è"üåà')
 elif (a>92) & (a<97):
  await message.answer('–û—Ö! –í—ã –≤—ã–±–∏–ª–∏ –æ—Å–æ–±–µ–Ω–Ω—É—é –ø–∏—Å—å–∫—É üë¥üèø"–§–ª–æ–π–¥"üë¥üèø ')
 elif (a>98) & (a<103):
  await message.answer('–£—Ö! –í—ã –≤—ã–±–∏–ª–∏ –º–∏—Ñ–∏—á. –ø–∏—Å—å–∫—É üßª"–¶–µ–Ω–Ω—ã–π —Ä–µ—Å—É—Ä—Å"üßª')
 elif (a>104) & (a<109):
  await message.answer('–û—Ö! –í—ã –≤—ã–±–∏–ª–∏ –æ—Å–æ–±–µ–Ω–Ω—É—é –ø–∏—Å—å–∫—É üè≥‚Äçüåà"–¢—Ä—É–±–æ—á–∏—Å—Ç"üè≥‚Äçüåà')
 elif (a>110) & (a<115):
  await message.answer('–£—Ö! –í—ã –≤—ã–±–∏–ª–∏ –º–∏—Ñ–∏—á. –ø–∏—Å—å–∫—É ‚ùì"–•—Ç–æ —è?"‚ùì')
 elif (a>116) & (a<126):
  await message.answer('–•–∞—Ö! –í—ã –≤—ã–±–∏–ª–∏ –ø–∏—Å—å–∫—É –ø–æ–±–µ–¥–∏—Ç–µ–ª—è –∫–æ–Ω–∫—É—Ä—Å–∞ üá¶üá∂"–ü–∏–Ω–≥–≤–∏–Ω –î–µ–Ω–∏—Å–∫–∞ –µ–±–∞—Ç—å"üá¶üá∂')
 elif (a>127) & (a<137):
  await message.answer('–•–∞—Ö! –í—ã –≤—ã–±–∏–ª–∏ –ø–∏—Å—å–∫—É –ø–æ–±–µ–¥–∏—Ç–µ–ª—è –∫–æ–Ω–∫—É—Ä—Å–∞ üë¥"–ü–æ–∂–∏–ª–æ–π –¥–µ–¥ –®–µ—Ä"üë¥')
 elif (a>138) & (a<146):
  await message.answer('–•–º... –í—ã –≤—ã–±–∏–ª–∏ —Ä–µ–¥–∫—É—é –ø–∏—Å—å–∫—É üöÄ"Space –ß."üöÄ')
 elif (a>147) & (a<155):
  await message.answer('–•–º... –í—ã –≤—ã–±–∏–ª–∏ —Ä–µ–¥–∫—É—é –ø–∏—Å—å–∫—É üß†"–ú–æ–∑–≥–æ–≤–æ–π —à—Ç—É—Ä–º"üß† ')
 elif (a > 156) & (a < 164):
     await message.answer('–•–º... –í—ã –≤—ã–±–∏–ª–∏ —Ä–µ–¥–∫—É—é –ø–∏—Å—å–∫—É üÉè"–¶–∏—Ü–µ—Ä–æ–Ω"üÉè')
 elif (a > 165) & (a < 173):
     await message.answer('–•–º... –í—ã –≤—ã–±–∏–ª–∏ —Ä–µ–¥–∫—É—é –ø–∏—Å—å–∫—É ‚ö±Ô∏è"–ê–Ω—Ç–∏–∫–≤–∞—Ä–∏–∞—Ç"‚ö±Ô∏è')
 else:
     await message.answer('–Ω–∏—á–µ–≥–æ!')

'''@dp.message_handler(state='*',commands= ['st'])
async def st(msg: types.message):
    state = dp.current_state(user=msg.from_user.id)
    await state.reset_state()
    await msg.answer('st')'''
if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
