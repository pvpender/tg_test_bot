import logging
from aiogram import Bot, Dispatcher, executor, types
from aiogram.utils.helper import Helper, HelperMode, ListItem
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.contrib.middlewares.logging import LoggingMiddleware
import random
import time
import os
import sqlite3 as sq
import time
API_TOKEN =  os.environ.get('B_T')
import asyncio 

# Configure logging
logging.basicConfig(level=logging.INFO)


class TS(Helper):
    mode = HelperMode.snake_case
    T_S1 = ListItem()
    T_S2 = ListItem()
    T_S3 = ListItem()


# Initialize bot and dispatcher
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot, storage=MemoryStorage())
dp.middleware.setup(LoggingMiddleware())

a = 0
ct = ' –ü—Ä–æ–ø–∞–ª–∞ –ø–∏—Å—å–∫–∞!'
usid = 0
wlis = ['859850095', '898287979']

con = sq.connect(':memory:')
c = con.cursor()
c.execute("CREATE TABLE em(id integer, pol integer)")
con.commit()

con1 = sq.connect(':memory:')
c1 = con1.cursor()
c1.execute("CREATE TABLE om(id integer, p1 integer,p2 integer,p3 integer,p4 integer,p5 integer,p6 integer,p7 integer,p8 integer,p9 integer,p10 integer,p11 integer,p12 integer,p13 integer,p14 integer,p15 integer,p16 integer,p17 integer,p18 integer,p19 integer,p20 integer,p21 integer,p22 integer,p23 integer,p24 integer,p25 integer,p26 integer,p27 integer,p28 integer,p29 integer,p30 integer,p31 integer,p32 integer,p33 integer,p34 integer,p35 integer,p36 integer,p37 integer,p38 integer,p39 integer,p40 integer, p41 integer, p42 integer, p43 integer)")
con1.commit()

@dp.message_handler(commands=['dik'])
async def echo(message: types.Message):
    if str(message.from_user.id) in wlis:
        a = random.randint(1, 1000)
        id = '@' + str(message.from_user.username)
        text = "–£–≥–æ,  " + id + " ! –¢–≤–æ–π –ø–∏—Å–∫–∞ —Ü–µ–ª—ã—Ö " + str(a) + " —Å–≤–µ—Ç–æ–≤—ã—Ö –ª–µ—Ç!"
        await message.answer(text)
    else:
        a = random.randint(-200, 40)
        if (a == 0):
            text = "–ù–µ –º–∞ –ø–∏—Å–∫–∞"
            id = '@' + str(message.from_user.username)
            text = id + ' ' + text
            await message.answer(text)

        if (a < 0):
            text = "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞ –ø–∏—Å–∫–∞, –≤—Å–µ–≥–æ " + str(a) + " –º–º!"
            id = '@' + str(message.from_user.username)
            text = id + ' ' + text
            await message.answer(text)

        if (a > 0):
            text = "–¢–≤–æ–π –ø–∏—Å–∫–∞ " + str(a) + " –º–º!"
            id = '@' + str(message.from_user.username)
            text = id + ' ' + text
            await message.answer(text)


@dp.message_handler(commands=['an_dik'])
async def check(message: types.message):
    try:
        if str(message.reply_to_message.from_user.id) in wlis:
            a = random.randint(1, 1000)
            id = '@' + str(message.reply_to_message.from_user.username)
            text = "–£–≥–æ! –£ " + id + " –ø–∏—Å–∫–∞ —Ü–µ–ª—ã—Ö " + str(a) + " —Å–≤–µ—Ç–æ–≤—ã—Ö –ª–µ—Ç!"
            await message.answer(text)
        else:
            a = random.randint(-200, 40)
            if (a < 0):
                id = '@' + str(message.reply_to_message.from_user.username)
                text = "–£ " + id + " –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞ –ø–∏—Å–∫–∞, –≤—Å–µ–≥–æ " + str(a) + " –º–º!"
                await message.answer(text)
            if (a == 0):
                id = '@' + str(message.reply_to_message.from_user.username)
                text = "–£ " + id + " –Ω–µ –º–∞ –ø–∏—Å–∫–∞"
                await message.answer(text)
            if (a > 0):
                id = '@' + str(message.reply_to_message.from_user.username)
                text = "–£ " + id + " –ø–∏—Å–∫–∞ " + str(a) + " –º–º!"
                await message.answer(text)
    except:
        await message.answer('–ö–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ —è–≤–ª—è—Ç—å—Å—è –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ!')


@dp.message_handler(commands=['per_dik'])
async def check(message: types.message):
    try:
        if str(message.reply_to_message.forward_from.id) in wlis:
            id = '@' + str(message.reply_to_message.forward_from.username)
            a = random.randint(1, 1000)
            text = "–£–≥–æ! –£ " + id + " –ø–∏—Å–∫–∞ —Ü–µ–ª—ã—Ö " + str(a) + " —Å–≤–µ—Ç–æ–≤—ã—Ö –ª–µ—Ç!"
            await message.answer(text)
        else:
            a = random.randint(-200, 40)
            if (a < 0):
                id = '@' + str(message.reply_to_message.forward_from.username)
                text = "–£ " + id + " –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞ –ø–∏—Å–∫–∞, –≤—Å–µ–≥–æ " + str(a) + " –º–º!"
                await message.answer(text)
            if (a == 0):
                id = '@' + str(message.reply_to_message.forward_from.username)
                text = "–£ " + id + " –Ω–µ –º–∞ –ø–∏—Å–∫–∞"
                await message.answer(text)
            if (a > 0):
                id = '@' + str(message.reply_to_message.forward_from.username)
                text = "–£ " + id + " –ø–∏—Å–∫–∞ " + str(a) + " –º–º!"
                await message.answer(text)
    except:
        await message.answer(
            '–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å username —á–µ–ª–æ–≤–µ–∫–∞, –µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—å  –∑–∞–∫—Ä—ã—Ç –∏–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ')


@dp.message_handler(commands=['whois'])
async def whois(msg: types.message):
    try:
        if msg.reply_to_message.forward_from:
            fwd = msg.reply_to_message.forward_from.id
            await msg.answer(str(fwd))
        elif msg.reply_to_message.from_user:
            fwd = msg.reply_to_message.from_user.id
            await msg.answer(str(fwd))
    except:
        fwd = msg.from_user.id
        await msg.answer(str(fwd))



@dp.message_handler(commands=['print'])
async def pr(msg: types.message):
    global ct
   # await msg.answer_photo(
   #   'https://raw.githubusercontent.com/pvpender/tg_test_bot/master/21-11-37-1569325738_mi-mix-alpha.jpeg')
    while True :
        await msg.answer('1')
        time.sleep(10)

def lol(msg: types.message):
    if  True :
        msg.answer('1')

@dp.message_handler(state='*', commands=['izm'])
async def izm(msg: types.message):
    state = dp.current_state(user=msg.from_user.id)
    await state.set_state(TS.all()[1])
    await msg.answer('heh')



@dp.message_handler(state=TS.T_S2)
async def izmen(msg: types.message):
    state = dp.current_state(user=msg.from_user.id)
    global ct
    ct = msg.text
    await state.reset_state()
    await msg.answer('gotov')


@dp.message_handler(lambda m: m.chat.type == 'private', state='*', commands=['sviz'])
async def otp(msg: types.message):
    state = dp.current_state(user=msg.from_user.id)
    await state.set_state(TS.all()[0])
    await msg.answer(
        '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—Ç–µ –≤–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –û–î–ù–ò–ú —Å–æ–æ–±—â–µ–Ω–∏–µ–º. –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è - –≤–∞–º –ø—Ä–∏–¥—ë—Ç –æ–± —ç—Ç–æ–º —Å–æ–æ–±—â–µ–Ω–∏–µ. –ï—Å–ª–∏ –Ω–µ—Ç - –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑. –í–ù–ò–ú–ê–ù–ò–ï: –∫–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤ –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–∞—Ö, –ø–∏—à–∏—Ç–µ –±–æ—Ç—É –≤ –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!')

@dp.message_handler(lambda m: m.chat.type != 'private', state='*', commands=['sviz'])
async def mistake(msg: types.message):
    await msg.answer('–ö–æ–º–∞–Ω–¥—É /sviz –Ω—É–∂–Ω–æ –ø–∏—Å–∞—Ç—å –±–æ—Ç—É –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è!')

@dp.message_handler(state=TS.T_S1)
async def otpravka(msg: types.message):
    state = dp.current_state(user=msg.from_user.id)
    c.execute("INSERT INTO em(id, pol) VALUES(?,?)",(msg.message_id, msg.from_user.id))
    print(msg.message_id)
    print(msg.from_user.id)
    await msg.forward(898287979)
    await state.reset_state()
    await msg.answer('–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ! –ö–æ–º–∞–Ω–¥–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Ä–∞—Å—Å–º–æ—Ç—Ä–∏—Ç –µ–≥–æ!')

@dp.message_handler(commands=['otv'])
async def ot(msg: types.message):
  try:
    state = dp.current_state(user= msg.from_user.id)
    global usid
    usid = msg.reply_to_message.message_id
    await state.set_state(TS.all()[2])
    await msg.answer('–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')

    @dp.message_handler(state=TS.T_S3)
    async def to(msg):
      try:
        c.execute("SELECT pol FROM em WHERE id =?",(usid-1,))
        row = c.fetchone()
        print(usid)
        print(row)
        r = row[0]
        await bot.send_message(r,msg.text)
        await state.reset_state()
        await msg.answer('gotovo')
      except:
         await msg.answer('–û—à–∏–±–∫–∞')
         await state.reset_state()
  except:
        await msg.answer('–û—à–∏–±–∫–∞')



@dp.message_handler(commands= ['dikruletka'])
async def rul(message: types.message):
 a = random.randint(1,1000)
 e = message.from_user.id
 c1.execute("SELECT id FROM om WHERE id = ?",(e,))
 r = c1.fetchone()
 if r == None:
     c1.execute("INSERT INTO om(id,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36,p37,p38,p39,p40, p41, p42, p43) VALUES(?,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)",(e,))
 if (a>2) & (a<12):
    await message.answer('–ú–º... –í—ã  –≤—ã–±–∏–ª–∏ –æ–±—ã—á–Ω—É—é –ø–∏—Å—å–∫—É ü•î"–ú–∏—Å—Ç–µ—Ä –∫–∞—Ä—Ç–æ—à–∫–∞"ü•î')
    c1.execute("SELECT p1 FROM om WHERE id =?", (e,))
    row = c1.fetchone()
    c1.execute("UPDATE om SET p1 =? WHERE id = ?", (row[0] + 1, e))
 elif a == 1:
    await message.answer('–û–≥–æ! –í—ã –≤—ã–±–∏–ª–∏ –ª–µ–≥–µ–Ω–¥–∞—Ä–Ω—É—é –ø–∏—Å—å–∫—É üíÄ"–•*—ë–≤–∞—è —Å–º–µ—Ä—Ç—å"üíÄ')
    c1.execute("SELECT p2 FROM om WHERE id =?", (e,))
    row = c1.fetchone()
    c1.execute("UPDATE om SET p2 =? WHERE id = ?", (row[0] + 1, e))
 elif (a>13) & (a<23):
    await message.answer('–ú–º... –í—ã –≤—ã–±–∏–ª–∏ –æ–±—ã—á–Ω—É—é –ø–∏—Å—å–∫—É üò∑"–ö–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å"üò∑')
    c1.execute("SELECT p3 FROM om WHERE id =?", (e,))
    row = c1.fetchone()
    c1.execute("UPDATE om SET p3 =? WHERE id = ?", (row[0] + 1, e))
 elif (a>24) & (a<34):
    await message.answer('–ú–º... –í—ã –≤—ã–±–∏–ª–∏ –æ–±—ã—á–Ω—É—é –ø–∏—Å—å–∫—É üêß"–î—É—Ä–∫–∞ –ü–∏–Ω–≥–≤–∏–Ω–∞"üêß')
    c1.execute("SELECT p4 FROM om WHERE id =?", (e,))
    row = c1.fetchone()
    c1.execute("UPDATE om SET p4 =? WHERE id = ?", (row[0] + 1, e))
 elif (a>35) & (a<45):
    await message.answer('–ú–º... –í—ã –≤—ã–±–∏–ª–∏ –æ–±—ã—á–Ω—É—é –ø–∏—Å—å–∫—É ü§¨"–ì–æ–ø–Ω–∏–∫"ü§¨')
    c1.execute("SELECT p5 FROM om WHERE id =?", (e,))
    row = c1.fetchone()
    c1.execute("UPDATE om SET p5 =? WHERE id = ?", (row[0] + 1, e))
 elif (a>46) & (a<56):
    await message.answer('–ú–º... –í—ã –≤—ã–±–∏–ª–∏ –æ–±—ã—á–Ω—É—é –ø–∏—Å—å–∫—É –ø–∏—Å—å–∫—É üïµüèº‚Äç‚ôÇ"–ö–∞—Ç—Ç–∞–Ω–∏"üïµüèº‚Äç‚ôÇ')
    c1.execute("SELECT p6 FROM om WHERE id =?", (e,))
    row = c1.fetchone()
    c1.execute("UPDATE om SET p6 =? WHERE id = ?", (row[0] + 1, e))
 elif (a>57) & (a<67):
    await message.answer('–ú–º... –í—ã –≤—ã–±–∏–ª–∏ –æ–±—ã—á–Ω—É—é –ø–∏—Å—å–∫—É üêù"–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–π —É–ª–µ–π"üêù')
    c1.execute("SELECT p7 FROM om WHERE id =?", (e,))
    row = c1.fetchone()
    c1.execute("UPDATE om SET p7 =? WHERE id = ?", (row[0] + 1, e))
 elif (a>=68) & (a<=69):
    await message.answer('–û–≥–æ! –í—ã –≤—ã–±–∏–ª–∏ –ª–µ–≥–µ–Ω–¥–∞—Ä–Ω—É—é –ø–∏—Å—å–∫—É üê≤"–ó–æ–ª–æ—Ç–æ–π –¥—Ä–∞–∫–æ–Ω"üê≤')
    c1.execute("SELECT p8 FROM om WHERE id =?", (e,))
    row = c1.fetchone()
    c1.execute("UPDATE om SET p8 =? WHERE id = ?", (row[0] + 1, e))
 elif (a>70) & (a<76):
    await message.answer('–û! –í—ã –≤—ã–±–∏–ª–∏ —ç–ø–∏—á. –ø–∏—Å—å–∫—É ü¶Ö"–•–∞–±–∏–±"ü¶Ö')
    c1.execute("SELECT p9 FROM om WHERE id =?", (e,))
    row = c1.fetchone()
    c1.execute("UPDATE om SET p9 =? WHERE id = ?", (row[0] + 1, e))
 elif (a>77) & (a<83):
    await message.answer('–û! –í—ã –≤—ã–±–∏–ª–∏ —ç–ø–∏—á. –ø–∏—Å—å–∫—É üé≤"–ê–∑–∞—Ä—Ç"üé≤')
    c1.execute("SELECT p10 FROM om WHERE id =?", (e,))
    row = c1.fetchone()
    c1.execute("UPDATE om SET p10 =? WHERE id = ?", (row[0] + 1, e))
 elif (a>84) & (a<89):
    await message.answer('–£—Ö! –í—ã –≤—ã–±–∏–ª–∏ –º–∏—Ñ–∏—á. –ø–∏—Å—å–∫—É üëë"–ö–æ—Ä–æ–ª—å"üëë')
    c1.execute("SELECT p11 FROM om WHERE id =?", (e,))
    row = c1.fetchone()
    c1.execute("UPDATE om SET p11 =? WHERE id = ?", (row[0] + 1, e))
 elif (a>=90) & (a<=91):
    await message.answer('–û–≥–æ! –í—ã –≤—ã–±–∏–ª–∏ –ª–µ–≥–µ–Ω–¥–∞—Ä–Ω—É—é –ø–∏—Å—å–∫—É üåà"–û–±–¥–∞–≤–±–∞–≤—Å—è"üåà')
    c1.execute("SELECT p12 FROM om WHERE id =?", (e,))
    row = c1.fetchone()
    c1.execute("UPDATE om SET p12 =? WHERE id = ?", (row[0] + 1, e))
 elif (a>92) & (a<97):
    await message.answer('–û—Ö! –í—ã –≤—ã–±–∏–ª–∏ –æ—Å–æ–±–µ–Ω–Ω—É—é –ø–∏—Å—å–∫—É üë¥üèø"–§–ª–æ–π–¥"üë¥üèø ')
    c1.execute("SELECT p13 FROM om WHERE id =?", (e,))
    row = c1.fetchone()
    c1.execute("UPDATE om SET p13 =? WHERE id = ?", (row[0] + 1, e))
 elif (a>98) & (a<103):
    await message.answer('–£—Ö! –í—ã –≤—ã–±–∏–ª–∏ –º–∏—Ñ–∏—á. –ø–∏—Å—å–∫—É üßª"–¶–µ–Ω–Ω—ã–π —Ä–µ—Å—É—Ä—Å"üßª')
    c1.execute("SELECT p14 FROM om WHERE id =?", (e,))
    row = c1.fetchone()
    c1.execute("UPDATE om SET p14 =? WHERE id = ?", (row[0] + 1, e))
 elif (a>104) & (a<109):
    await message.answer('–û—Ö! –í—ã –≤—ã–±–∏–ª–∏ –æ—Å–æ–±–µ–Ω–Ω—É—é –ø–∏—Å—å–∫—É üè≥‚Äçüåà"–¢—Ä—É–±–æ—á–∏—Å—Ç"üè≥‚Äçüåà')
    c1.execute("SELECT p15 FROM om WHERE id =?", (e,))
    row = c1.fetchone()
    c1.execute("UPDATE om SET p15 =? WHERE id = ?", (row[0] + 1, e))
 elif (a>110) & (a<115):
    await message.answer('–£—Ö! –í—ã –≤—ã–±–∏–ª–∏ –º–∏—Ñ–∏—á. –ø–∏—Å—å–∫—É ‚ùì"–•—Ç–æ —è?"‚ùì')
    c1.execute("SELECT p16 FROM om WHERE id =?", (e,))
    row = c1.fetchone()
    c1.execute("UPDATE om SET p16 =? WHERE id = ?", (row[0] + 1, e))
 elif (a>116) & (a<126):
    await message.answer('–•–∞—Ö! –í—ã –≤—ã–±–∏–ª–∏ –ø–∏—Å—å–∫—É –ø–æ–±–µ–¥–∏—Ç–µ–ª—è –∫–æ–Ω–∫—É—Ä—Å–∞ üá¶üá∂"–ü–∏–Ω–≥–≤–∏–Ω –î–µ–Ω–∏—Å–∫–∞ –µ–±–∞—Ç—å"üá¶üá∂')
    c1.execute("SELECT p17 FROM om WHERE id =?", (e,))
    row = c1.fetchone()
    c1.execute("UPDATE om SET p17 =? WHERE id = ?", (row[0] + 1, e))
 elif (a>127) & (a<137):
    await message.answer('–•–∞—Ö! –í—ã –≤—ã–±–∏–ª–∏ –ø–∏—Å—å–∫—É –ø–æ–±–µ–¥–∏—Ç–µ–ª—è –∫–æ–Ω–∫—É—Ä—Å–∞ üë¥"–ü–æ–∂–∏–ª–æ–π –¥–µ–¥ –®–µ—Ä"üë¥')
    c1.execute("SELECT p18 FROM om WHERE id =?", (e,))
    row = c1.fetchone()
    c1.execute("UPDATE om SET p18 =? WHERE id = ?", (row[0] + 1, e))
 elif (a>138) & (a<146):
    await message.answer('–•–º... –í—ã –≤—ã–±–∏–ª–∏ —Ä–µ–¥–∫—É—é –ø–∏—Å—å–∫—É üöÄ"Space –ß."üöÄ')
    c1.execute("SELECT p19 FROM om WHERE id =?", (e,))
    row = c1.fetchone()
    c1.execute("UPDATE om SET p19 =? WHERE id = ?", (row[0] + 1, e))
 elif (a>147) & (a<155):
    await message.answer('–•–º... –í—ã –≤—ã–±–∏–ª–∏ —Ä–µ–¥–∫—É—é –ø–∏—Å—å–∫—É üß†"–ú–æ–∑–≥–æ–≤–æ–π —à—Ç—É—Ä–º"üß† ')
    c1.execute("SELECT p20 FROM om WHERE id =?", (e,))
    row = c1.fetchone()
    c1.execute("UPDATE om SET p20 =? WHERE id = ?", (row[0] + 1, e))
 elif (a > 156) & (a < 164):
     await message.answer('–•–º... –í—ã –≤—ã–±–∏–ª–∏ —Ä–µ–¥–∫—É—é –ø–∏—Å—å–∫—É üÉè"–¶–∏—Ü–µ—Ä–æ–Ω"üÉè')
     c1.execute("SELECT p23 FROM om WHERE id =?", (e,))
     row = c1.fetchone()
     c1.execute("UPDATE om SET p23 =? WHERE id = ?", (row[0] + 1, e))
 elif (a > 165) & (a < 173):
     await message.answer('–•–º... –í—ã –≤—ã–±–∏–ª–∏ —Ä–µ–¥–∫—É—é –ø–∏—Å—å–∫—É ‚ö±Ô∏è"–ê–Ω—Ç–∏–∫–≤–∞—Ä–∏–∞—Ç"‚ö±Ô∏è')
     c1.execute("SELECT p24 FROM om WHERE id =?",(e,))
     row = c1.fetchone()
     c1.execute("UPDATE om SET p24 =? WHERE id = ?",(row[0]+1,e))
 elif (a > 183) & (a < 191):
     await message.answer('–•–º... –í—ã –≤—ã–±–∏–ª–∏ —Ä–µ–¥–∫—É—é –ø–∏—Å—å–∫—É üßùüèª‚Äç‚ôÇ"–í—ã—Å—à–∞—è —Ä–∞—Å–∞"üßùüèª‚Äç‚ôÇ')
     c1.execute("SELECT p21 FROM om WHERE id =?", (e,))
     row = c1.fetchone()
     c1.execute("UPDATE om SET p21 =? WHERE id = ?", (row[0] + 1, e))
 elif (a > 174) & (a < 182):
     await message.answer('–•–º... –í—ã –≤—ã–±–∏–ª–∏ —Ä–µ–¥–∫—É—é –ø–∏—Å—å–∫—É üåµ"–ú–µ—Å–∫–∞–ª–∏—Ç–æ"üåµ')
     c1.execute("SELECT p22 FROM om WHERE id =?", (e,))
     row = c1.fetchone()
     c1.execute("UPDATE om SET p22 =? WHERE id = ?", (row[0] + 1, e))
 elif (a > 192) & (a < 198):
     await message.answer('–û! –í—ã –≤—ã–±–∏–ª–∏ —ç–ø–∏—á. –ø–∏—Å—å–∫—É ü¶æ"–ë–æ–ª—å—à–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏"ü¶æ')
     c1.execute("SELECT p25 FROM om WHERE id =?", (e,))
     row = c1.fetchone()
     c1.execute("UPDATE om SET p25 =? WHERE id = ?", (row[0] + 1, e))
 elif (a > 199) & (a < 205):
     await message.answer('–û! –í—ã –≤—ã–±–∏–ª–∏ —ç–ø–∏—á. –ø–∏—Å—å–∫—É ü¶Ç"–°–∫–æ—Ä–ø–∏–æ–Ω"ü¶Ç')
     c1.execute("SELECT p26 FROM om WHERE id =?", (e,))
     row = c1.fetchone()
     c1.execute("UPDATE om SET p26 =? WHERE id = ?", (row[0] + 1, e))
 elif (a > 206) & (a < 211):
     await message.answer('–£—Ö! –í—ã –≤—ã–±–∏–ª–∏ –º–∏—Ñ–∏—á. –ø–∏—Å—å–∫—É üêâ"–ë—Ä—é—Å –õ–∏"üêâ')
     c1.execute("SELECT p27 FROM om WHERE id =?", (e,))
     row = c1.fetchone()
     c1.execute("UPDATE om SET p27 =? WHERE id = ?", (row[0] + 1, e))
 elif (a > 212) & (a < 217):
     await message.answer('–£—Ö! –í—ã –≤—ã–±–∏–ª–∏ –º–∏—Ñ–∏—á. –ø–∏—Å—å–∫—É üç¨"–°–ª–∞–¥–æ—Å—Ç—å"üç¨')
     c1.execute("SELECT p28 FROM om WHERE id =?", (e,))
     row = c1.fetchone()
     c1.execute("UPDATE om SET p28 =? WHERE id = ?", (row[0] + 1, e))
 elif (a > 218) & (a < 226):
     await message.answer('–•–º... –í—ã –≤—ã–±–∏–ª–∏ —Ä–µ–¥–∫—É—é –ø–∏—Å—å–∫—É ü™ì"–î—Ä–æ–≤–æ—Å–µ–∫"ü™ì')
     c1.execute("SELECT p29 FROM om WHERE id =?", (e,))
     row = c1.fetchone()
     c1.execute("UPDATE om SET p29 =? WHERE id = ?", (row[0] + 1, e))
 elif (a > 227) & (a < 235):
     await message.answer('–•–º... –í—ã –≤—ã–±–∏–ª–∏ —Ä–µ–¥–∫—É—é –ø–∏—Å—å–∫—É ü•É"–ü—å—é—â–∏–π –∑–∞ –ª–∏—Ü–µ–º–µ—Ä–æ–≤"ü•É')
     c1.execute("SELECT p30 FROM om WHERE id =?", (e,))
     row = c1.fetchone()
     c1.execute("UPDATE om SET p30 =? WHERE id = ?", (row[0] + 1, e))
 elif (a >= 236) & (a <= 237):
     await message.answer('–£–æ–≥–æ! –í—ã –≤—ã–±–∏–ª–∏ –ª–µ–≥–µ–Ω–¥–∞—Ä–Ω—É—é –ø–∏—Å—å–∫—É ü§ñ"COOLBOT"ü§ñ')
     c1.execute("SELECT p31 FROM om WHERE id =?", (e,))
     row = c1.fetchone()
     c1.execute("UPDATE om SET p31 =? WHERE id = ?", (row[0] + 1, e))
 elif (a > 238) & (a < 248):
     await message.answer('–ú–º... –í—ã –≤—ã–±–∏–ª–∏ –æ–±—ã—á–Ω—É—é –ø–∏—Å—å–∫—É üêì"Petuh"üêì')
     c1.execute("SELECT p32 FROM om WHERE id =?", (e,))
     row = c1.fetchone()
     c1.execute("UPDATE om SET p32 =? WHERE id = ?", (row[0] + 1, e))
 elif (a > 249) & (a < 255):
     await message.answer('–û! –í—ã –≤—ã–±–∏–ª–∏ —ç–ø–∏—á. –ø–∏—Å—å–∫—É üé©"–î–∂–µ–Ω—Ç–ª—å–º–µ–Ω"üé©')
     c1.execute("SELECT p33 FROM om WHERE id =?", (e,))
     row = c1.fetchone()
     c1.execute("UPDATE om SET p33 =? WHERE id = ?", (row[0] + 1, e))
 elif (a > 256) & (a < 262):
     await message.answer('–û! –í—ã –≤—ã–±–∏–ª–∏ —ç–ø–∏—á. –ø–∏—Å—å–∫—É üíã"–°–ª–∞–¥–∫–∏–π –ø–æ—Ü–µ–ª—É–π"üíã')
     c1.execute("SELECT p34 FROM om WHERE id =?", (e,))
     row = c1.fetchone()
     c1.execute("UPDATE om SET p34 =? WHERE id = ?", (row[0] + 1, e))
 elif (a > 263) & (a < 269):
     await message.answer('–û! –í—ã –≤—ã–±–∏–ª–∏ —ç–ø–∏—á. –ø–∏—Å—å–∫—É üõ∏"–ù.–õ.–ü."üõ∏')
     c1.execute("SELECT p35 FROM om WHERE id =?", (e,))
     row = c1.fetchone()
     c1.execute("UPDATE om SET p35 =? WHERE id = ?", (row[0] + 1, e))
 elif (a > 270) & (a < 280):
     await message.answer('–ú–º... –í—ã –≤—ã–±–∏–ª–∏ –æ–±—ã—á–Ω—É—é –ø–∏—Å—å–∫—É üçÄ"–õ–µ–ø—Ä–µ–∫–æ–Ω"üçÄ')
     c1.execute("SELECT p36 FROM om WHERE id =?", (e,))
     row = c1.fetchone()
     c1.execute("UPDATE om SET p36 =? WHERE id = ?", (row[0] + 1, e))
 elif (a > 281) & (a < 291):
     await message.answer('–ú–º... –í—ã –≤—ã–±–∏–ª–∏ –æ–±—ã—á–Ω—É—é –ø–∏—Å—å–∫—É ü•∂"–ú–æ—Ä–æ–∑–Ω–∞—è —Å–≤–µ–∂–µ—Å—Ç—å"ü•∂')
     c1.execute("SELECT p37 FROM om WHERE id =?", (e,))
     row = c1.fetchone()
     c1.execute("UPDATE om SET p37 =? WHERE id = ?", (row[0] + 1, e))
 elif (a > 292) & (a < 302):
     await message.answer('–ú–º... –í—ã –≤—ã–±–∏–ª–∏ –æ–±—ã—á–Ω—É—é –ø–∏—Å—å–∫—É üëπ"–ß–æ—Ä—Ç"üëπ')
     c1.execute("SELECT p38 FROM om WHERE id =?", (e,))
     row = c1.fetchone()
     c1.execute("UPDATE om SET p38 =? WHERE id = ?", (row[0] + 1, e))
 elif (a > 303) & (a < 311):
     await message.answer('–•–º... –í—ã –≤—ã–±–∏–ª–∏ —Ä–µ–¥–∫—É—é –ø–∏—Å—å–∫—É üçÅ"–ö–ª–µ–Ω–æ–≤–æ–µ —Å—á–∞—Å—Ç—å–µ"üçÅ')
     c1.execute("SELECT p39 FROM om WHERE id =?", (e,))
     row = c1.fetchone()
     c1.execute("UPDATE om SET p39 =? WHERE id = ?", (row[0] + 1, e))
 elif (a > 312) & (a < 320):
     await message.answer('–•–º... –≤—ã –≤—ã–±–∏–ª–∏ —Ä–µ–¥–∫—É—é –ø–∏—Å—å–∫—É üë≥üèæ‚Äç‚ôÇ"–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –ê—Ö–º–µ–¥–∞"üë≥üèæ‚Äç‚ôÇ')
     c1.execute("SELECT p40 FROM om WHERE id =?", (e,))
     row = c1.fetchone()
     c1.execute("UPDATE om SET p40 =? WHERE id = ?", (row[0] + 1, e))
 elif (a > 325) & (a < 330):
     await message.answer('–£—Ö! –í—ã –≤—ã–±–∏–ª–∏ –º–∏—Ñ–∏—á. –ø–∏—Å—å–∫—É üèØ"–°–µ–∫–∏—Ä–æ"üèØ')
     c1.execute("SELECT p41 FROM om WHERE id =?", (e,))
     row = c1.fetchone()
     c1.execute("UPDATE om SET p41 =? WHERE id = ?", (row[0] + 1, e))
 elif (a > 331) & (a < 336):
     await message.answer('–£—Ö! –í—ã –≤—ã–±–∏–ª–∏ –º–∏—Ñ–∏—á. –ø–∏—Å—å–∫—É üç∫"–ì–µ—Ä–∞–ª—å—Ç"üç∫')
     c1.execute("SELECT p42 FROM om WHERE id =?", (e,))
     row = c1.fetchone()
     c1.execute("UPDATE om SET p42 =? WHERE id = ?", (row[0] + 1, e))
 elif (a > 336) & (a < 342):
     await message.answer('–£—Ö! –í—ã –≤—ã–±–∏–ª–∏ –º–∏—Ñ–∏—á. –ø–∏—Å—å–∫—É üá∫üá≤–ê–º–µ—Ä–∏–∫–∞üá∫üá≤')
     c1.execute("SELECT p43 FROM om WHERE id =?", (e,))
     row = c1.fetchone()
     c1.execute("UPDATE om SET p43 =? WHERE id = ?", (row[0] + 1, e))
 else:
     global ct
     await message.answer(ct)


@dp.message_handler(commands=['inventory'])
async def inv(msg: types.message):
    e = msg.from_user.id
    try:
        c1.execute("SELECT * FROM om WHERE id=?",(e,))
        row = c1.fetchone()
        s = """      ·Ö†ü•î–ú–∏—Å—Ç–µ—Ä –∫–∞—Ä—Ç–æ—à–∫–∞ü•î: %(1)i 
    üíÄ–•*—ë–≤–∞—è —Å–º–µ—Ä—Ç—åüíÄ: %(2)i 
         üò∑–ö–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Åüò∑: %(3)i
         üêß–î—É—Ä–∫–∞ –ü–∏–Ω–≥–≤–∏–Ω–∞üêß: %(4)i
         ü§¨–ì–æ–ø–Ω–∏–∫ü§¨: %(5)i
        üïµüèº‚Äç‚ôÇ–ö–∞—Ç—Ç–∞–Ω–∏üïµüèº‚Äç‚ôÇ: %(6)i
    üêù–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–π —É–ª–µ–πüêù: %(7)i
        üê≤–ó–æ–ª–æ—Ç–æ–π –¥—Ä–∞–∫–æ–Ωüê≤: %(8)i
         ü¶Ö–•–∞–±–∏–±ü¶Ö: %(9)i
        üé≤–ê–∑–∞—Ä—Çüé≤: %(10)i
        üëë–ö–æ—Ä–æ–ª—åüëë: %(11)i
         üåà–û–±–¥–∞–≤–±–∞–≤—Å—èüåà: %(12)i
         üë¥üèø–§–ª–æ–π–¥üë¥üèø: %(13)i
        üßª–¶–µ–Ω–Ω—ã–π —Ä–µ—Å—É—Ä—Åüßª: %(14)i
        üè≥‚Äçüåà–¢—Ä—É–±–æ—á–∏—Å—Çüè≥‚Äçüåà: %(15)i
         ‚ùì–•—Ç–æ —è?‚ùì: %(16)i
    üá¶üá∂–ü–∏–Ω–≥–≤–∏–Ω –î–µ–Ω–∏—Å–∫–∞"üá¶üá∂: %(17)i
    üë¥–ü–æ–∂–∏–ª–æ–π –¥–µ–¥ –®–µ—Äüë¥: %(18)i
        üöÄSpace –ß.üöÄ: %(19)i
        üß†–ú–æ–∑–≥–æ–≤–æ–π —à—Ç—É—Ä–ºüß†: %(20)i
        üßùüèª‚Äç‚ôÇ–í—ã—Å—à–∞—è —Ä–∞—Å–∞üßùüèª‚Äç‚ôÇ: %(21)i
        üåµ–ú–µ—Å–∫–∞–ª–∏—Ç–æüåµ: %(22)i
        üÉè–¶–∏—Ü–µ—Ä–æ–ΩüÉè:%(23)i
        –ê–Ω—Ç–∏–∫–≤–∞—Ä–∏–∞—Ç‚ö±Ô∏è:%(24)i
     ü¶æ–ë–æ–ª—å—à–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ü¶æ:%(25)i
         ü¶Ç–°–∫–æ—Ä–ø–∏–æ–Ωü¶Ç:%(26)i
         üêâ–ë—Ä—é—Å –õ–∏üêâ:%(27)i
         üç¨–°–ª–∞–¥–æ—Å—Ç—åüç¨:%(28)i
         ü™ì–î—Ä–æ–≤–æ—Å–µ–∫ü™ì:%(29)i
      ü•É –ü—å—é—â–∏–π –∑–∞ –ª–∏—Ü–µ–º–µ—Ä–æ–≤ü•É:%(30)i
          ü§ñCOOLBOTü§ñ:%(31)i
          üêìPetuhüêì:%(32)i
        üé©–î–∂–µ–Ω—Ç–ª—å–º–µ–Ωüé©:%(33)i
        üíã–°–ª–∞–¥–∫–∏–π –ø–æ—Ü–µ–ª—É–πüíã:%(34)i
          üõ∏–ù.–õ.–ü.üõ∏:%(35)i
         üçÄ–õ–µ–ø—Ä–µ–∫–æ–ΩüçÄ:%(36)i
         ü•∂–ú–æ—Ä–æ–∑–Ω–∞—è —Å–≤–µ–∂–µ—Å—Ç—åü•∂:%(37)i
             üëπ–ß–æ—Ä—Çüëπ:%(38)i
         üçÅ–ö–ª–µ–Ω–æ–≤–æ–µ —Å—á–∞—Å—Ç—å–µüçÅ:%(39)i
        üë≥üèæ‚Äç‚ôÇ–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –ê—Ö–º–µ–¥–∞üë≥üèæ‚Äç‚ôÇ:%(40)i
        üèØ"–°–µ–∫–∏—Ä–æ"üèØ: %(41)i
        üç∫"–ì–µ—Ä–∞–ª—å—Ç"üç∫: %(42)i
        üá∫üá≤–ê–º–µ—Ä–∏–∫–∞üá∫üá≤: %(43)i
        """%{"1":row[1], "2":row[2], "3":row[3], "4":row[4], "5":row[5], "6":row[6], "7":row[7], "8":row[8], "9":row[9], "10":row[10], "11":row[11], "12":row[12], "13":row[13], "14":row[14], "15":row[15], "16":row[16], "17":row[17], "18":row[18], "19":row[19], "20":row[20], "21":row[21], "22":row[22], "23":row[23],"24":row[24],"25":row[25],"26":row[26],"27":row[27],"28":row[28],"29":row[29],"30":row[30],"31":row[31],"32":row[32],"33":row[33],"34":row[34],"35":row[35],"36":row[36],"37":row[37],"38":row[38],"39":row[39],"40":row[40],"41":row[41],"42":row[42],"43":row[43]}
        await msg.answer(s)
    except:
        await msg.answer('–≤—ã –µ—â—ë –Ω–∏ —Ä–∞–∑—É –Ω–µ –∫—Ä—É—Ç–∏–ª–∏!')

@dp.message_handler(commands=['save'])
async def sav(msg : types.message):
     while True:
        await msg.answer('—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ')
        await asyncio.sleep(1740)


'''@dp.message_handler(state='*',commands= ['st'])
async def st(msg: types.message):
    state = dp.current_state(user=msg.from_user.id)
    await state.reset_state()
    await msg.answer('st')'''
if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)


